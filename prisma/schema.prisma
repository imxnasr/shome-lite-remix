// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  watchlist Show[]   @relation("Watchlist")
}

model Show {
  id          String   @id @default(uuid())
  name        String
  type        ShowType
  genres      Genre[]  @relation("ShowGenre")
  description String?
  image       String
  cover       String?
  numEpisodes Int?
  runtime     Int?
  rating      Int      @default(0)
  country     String
  trailerLink String?
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  savedBy     User[]   @relation("Watchlist")
  actors      Act[]    @relation("ShowAct")
}

model Genre {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shows     Show[]   @relation("ShowGenre")
}

model Actor {
  id        String      @id @default(uuid())
  name      String
  gender    ActorGender
  birthDate DateTime?
  createdAt DateTime    @default(now())
  updateAt  DateTime    @updatedAt
  Act       Act[]       @relation("ActorAct")
}

model Act {
  id      String  @id @default(uuid())
  actAs   String
  showId  String?
  actorId String?
  show    Show?   @relation("ShowAct", fields: [showId], references: [id], onDelete: Cascade)
  actor   Actor?  @relation("ActorAct", fields: [actorId], references: [id], onDelete: Cascade)

  @@unique([showId, actorId])
}

enum UserRole {
  USER
  ADMIN
}

enum ShowType {
  MOVIE
  TV
}

enum ActorGender {
  M
  F
}
